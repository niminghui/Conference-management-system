<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd">

	<context:annotation-config />
	<!-- 扫描该包下的所有需要注册到spring 容器内的class -->
	<context:component-scan base-package="scb.dev.sms"></context:component-scan>

	<!-- 加载配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />


	<!-- 数据库连接池 数据库连接池 使用阿里 druid -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小 最小 最大 --> 
	  	<property name="initialSize" value="${jdbc.initialSize}" /> 
	  	<property name="minIdle" value="${jdbc.minIdle}" /> 
	  	<property name="maxActive" value="${jdbc.maxActive}" />
	 	<!-- 配置获取连接等待超时的时间 --> 
	  	<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>

	<!-- SqlSessionFactory配置 -->
	<!-- 让Spring管理SqlSessionFactory使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath*:scb/dev/sms/sm/dao/xml/*.xml</value>
				<value>classpath*:scb/dev/sms/log/dao/xml/*.xml</value>
			</array>
		</property>

	</bean>

	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage"
			value="scb.dev.sms.sm.dao,scb.dev.sms.log.dao" />
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>
	
	<bean id="transactionManager" 
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> 
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>