<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scb.dev.sms.sm.dao.RoleGroupGrantMapper">
  <resultMap id="BaseResultMap" type="scb.dev.sms.sm.pojo.RoleGroupGrant">
    <id column="rg_rolegroup_id" jdbcType="VARCHAR" property="rgRolegroupId" />
    <id column="rg_menu_id" jdbcType="VARCHAR" property="rgMenuId" />
    <result column="rg_created_user" jdbcType="VARCHAR" property="rgCreatedUser" />
    <result column="rg_created_time" jdbcType="TIMESTAMP" property="rgCreatedTime" />
    <result column="rg_updated_user" jdbcType="VARCHAR" property="rgUpdatedUser" />
    <result column="rg_updated_time" jdbcType="TIMESTAMP" property="rgUpdatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    rg_rolegroup_id, rg_menu_id, rg_created_user, rg_created_time, rg_updated_user, rg_updated_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_rolegroup_grant
    where rg_rolegroup_id = #{rgRolegroupId,jdbcType=VARCHAR}
      and rg_menu_id = #{rgMenuId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from sm_rolegroup_grant
    where rg_rolegroup_id = #{rgRolegroupId,jdbcType=VARCHAR}
      and rg_menu_id = #{rgMenuId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="scb.dev.sms.sm.pojo.RoleGroupGrant">
    insert into sm_rolegroup_grant (rg_rolegroup_id, rg_menu_id, rg_created_user, 
      rg_created_time, rg_updated_user, rg_updated_time
      )
    values (#{rgRolegroupId,jdbcType=VARCHAR}, #{rgMenuId,jdbcType=VARCHAR}, #{rgCreatedUser,jdbcType=VARCHAR}, 
      #{rgCreatedTime,jdbcType=TIMESTAMP}, #{rgUpdatedUser,jdbcType=VARCHAR}, #{rgUpdatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="scb.dev.sms.sm.pojo.RoleGroupGrant">
    insert into sm_rolegroup_grant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rgRolegroupId != null">
        rg_rolegroup_id,
      </if>
      <if test="rgMenuId != null">
        rg_menu_id,
      </if>
      <if test="rgCreatedUser != null">
        rg_created_user,
      </if>
      <if test="rgCreatedTime != null">
        rg_created_time,
      </if>
      <if test="rgUpdatedUser != null">
        rg_updated_user,
      </if>
      <if test="rgUpdatedTime != null">
        rg_updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rgRolegroupId != null">
        #{rgRolegroupId,jdbcType=VARCHAR},
      </if>
      <if test="rgMenuId != null">
        #{rgMenuId,jdbcType=VARCHAR},
      </if>
      <if test="rgCreatedUser != null">
        #{rgCreatedUser,jdbcType=VARCHAR},
      </if>
      <if test="rgCreatedTime != null">
        #{rgCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rgUpdatedUser != null">
        #{rgUpdatedUser,jdbcType=VARCHAR},
      </if>
      <if test="rgUpdatedTime != null">
        #{rgUpdatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="scb.dev.sms.sm.pojo.RoleGroupGrant">
    update sm_rolegroup_grant
    <set>
      <if test="rgCreatedUser != null">
        rg_created_user = #{rgCreatedUser,jdbcType=VARCHAR},
      </if>
      <if test="rgCreatedTime != null">
        rg_created_time = #{rgCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rgUpdatedUser != null">
        rg_updated_user = #{rgUpdatedUser,jdbcType=VARCHAR},
      </if>
      <if test="rgUpdatedTime != null">
        rg_updated_time = #{rgUpdatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where rg_rolegroup_id = #{rgRolegroupId,jdbcType=VARCHAR}
      and rg_menu_id = #{rgMenuId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="scb.dev.sms.sm.pojo.RoleGroupGrant">
    update sm_rolegroup_grant
    set rg_created_user = #{rgCreatedUser,jdbcType=VARCHAR},
      rg_created_time = #{rgCreatedTime,jdbcType=TIMESTAMP},
      rg_updated_user = #{rgUpdatedUser,jdbcType=VARCHAR},
      rg_updated_time = #{rgUpdatedTime,jdbcType=TIMESTAMP}
    where rg_rolegroup_id = #{rgRolegroupId,jdbcType=VARCHAR}
      and rg_menu_id = #{rgMenuId,jdbcType=VARCHAR}
  </update>
</mapper>