<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scb.dev.sms.sm.dao.AccountDao">
  <resultMap id="BaseResultMap" type="scb.dev.sms.sm.pojo.Account">
    <id column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_password" jdbcType="VARCHAR" property="accountPassword" />
    <result column="account_updated_user" jdbcType="VARCHAR" property="accountUpdatedUser" />
    <result column="account_updated_time" jdbcType="TIMESTAMP" property="accountUpdatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    account_id, account_name, account_password, account_updated_user, account_updated_time
  </sql>
  <select id="selectByAccountId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </select>
  <select id="selectByAccountName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_account
    where account_name = #{accountName,jdbcType=VARCHAR}
  </select>
  <select id="selectAccountIdByAccountName" parameterType="java.lang.String" resultType="String">
    select 
	account_id
    from sm_account
    where account_name = #{accountName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByAccountId" parameterType="java.lang.String">
    delete from sm_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="scb.dev.sms.sm.pojo.Account">
    insert into sm_account (account_id, account_name, account_password, 
      account_updated_user, account_updated_time
      )
    values (#{accountId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{accountPassword,jdbcType=VARCHAR}, 
      #{accountUpdatedUser,jdbcType=VARCHAR}, #{accountUpdatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="scb.dev.sms.sm.pojo.Account">
    insert into sm_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountPassword != null">
        account_password,
      </if>
      <if test="accountUpdatedUser != null">
        account_updated_user,
      </if>
      <if test="accountUpdatedTime != null">
        account_updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null">
        #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountUpdatedUser != null">
        #{accountUpdatedUser,jdbcType=VARCHAR},
      </if>
      <if test="accountUpdatedTime != null">
        #{accountUpdatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByAccountIdSelective" parameterType="scb.dev.sms.sm.pojo.Account">
    update sm_account
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null">
        account_password = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountUpdatedUser != null">
        account_updated_user = #{accountUpdatedUser,jdbcType=VARCHAR},
      </if>
      <if test="accountUpdatedTime != null">
        account_updated_time = #{accountUpdatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByAccountId" parameterType="scb.dev.sms.sm.pojo.Account">
    update sm_account
    set account_name = #{accountName,jdbcType=VARCHAR},
      account_password = #{accountPassword,jdbcType=VARCHAR},
      account_updated_user = #{accountUpdatedUser,jdbcType=VARCHAR},
      account_updated_time = #{accountUpdatedTime,jdbcType=TIMESTAMP}
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
</mapper>